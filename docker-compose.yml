services:
  # outer services
  postgres:
    image: postgres:16-alpine
    container_name: postgres-zuzex-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    networks:
      - microservices-net
    volumes:
      - postgres-volume:/data/postgres
      - ./db-initializer.sh:/usr/local/bin/db-initializer.sh
#    entrypoint: /usr/local/bin/db-initializer.sh  # Переопределяем entrypoint
#    command: postgres  # Оригинальная команда для PostgreSQL
    restart: unless-stopped

  vault:
    #    image: vault:1.13.3
    image: hashicorp/vault:1.19
    container_name: vault-zuzex-container
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    networks:
      - microservices-net
    volumes:
      - vault-volume:/vault/file

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-zuzex-container
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-zuzex-container
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - microservices-net

  zipkin:
    container_name: zipkin-zuzex-container
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net


  # infrastructure services
  config-server:
    image: danilchet/zuzex-config-server-ms
    container_name: config-server-zuzex-container
    networks:
      - microservices-net
    ports:
      - "8071:8071"

  eureka-server:
    image: danilchet/zuzex-eureka-server-ms
    container_name: eureka-server-zuzex-container
    networks:
      - microservices-net
    ports:
      - "8761:8761"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8071
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
    depends_on:
      - config-server

  gateway-server:
    image: danilchet/zuzex-gateway-server-ms
    container_name: gateway-server-zuzex-container
    networks:
      - microservices-net
    ports:
      - "8072:8072"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8071
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      #      - SPRING_PROFILES_ACTIVE=docker
      - "eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/"
    depends_on:
      - config-server


  # main services
  auth-ms:
    image: danilchet/zuzex-auth-ms
    container_name: auth-ms-zuzex-container
    networks:
      - microservices-net
    ports:
      - "8120:8120"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8071
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - "eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/"
      - "spring.kafka.bootstrap-servers= kafka:9092"
    depends_on:
      - config-server

  account-ms:
    image: danilchet/zuzex-account-ms
    container_name: account-ms-zuzex-container
    networks:
      - microservices-net
    ports:
      - "8100:8100"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8071
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - "eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/"
      - "spring.kafka.bootstrap-servers= kafka:9092"
    depends_on:
      - config-server

  task-ms:
    image: danilchet/zuzex-task-ms
    container_name: task-ms-zuzex-container
    networks:
      - microservices-net
    ports:
      - "8110:8110"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8071
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - "eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/"
      - "spring.kafka.bootstrap-servers= kafka:9092"
    depends_on:
      - config-server

networks:
  microservices-net:
    driver: bridge
volumes:
  postgres-volume:
  vault-volume: