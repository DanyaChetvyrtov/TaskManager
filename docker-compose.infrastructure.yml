services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres-zuzex-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    networks:
      - microservices-net
    volumes:
      - postgres-volume:/data/postgres
      - ./db-initializer.sh:/usr/local/bin/db-initializer.sh
    restart: unless-stopped

  vault:
    image: hashicorp/vault:1.19
    container_name: vault-zuzex-container
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    networks:
      - microservices-net
    volumes:
      - vault-volume:/vault/data
      - ./vault-initializer.sh:/usr/local/bin/vault-initializer.sh
      - ./custom-vault-entrypoint.sh:/custom-vault-entrypoint.sh
    entrypoint: /custom-vault-entrypoint.sh

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-zuzex-container
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-zuzex-container
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - microservices-net

  zipkin:
    container_name: zipkin-zuzex-container
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge
volumes:
  postgres-volume:
  vault-volume:
